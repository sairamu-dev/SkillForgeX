@using SkillForgeX.Areas.Manager.ViewModels
@model IEnumerable<UsersViewModel>

@{
    ViewData["Title"] = "View Tasks";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Html.Partial("_sidePanelLayout")

<div class="dev-users-card" style="padding: 30px;">
    <div id="header" style="display: flex; align-items: center; margin-bottom: 3%;">
        <div>
            <h1>Dev Users</h1>
        </div>
        <div style="margin-left: auto;">
            <button type="button" id="btnTaskCreate"
                    onclick="location.href='@Url.Action("Task", "Home", new { area = "Manager" })'"
                    class="btn btn-primary">
                Create Task
            </button>
        </div>
    </div>

    <!-- Always visible header -->
    <div class="alert alert-primary" role="alert" style="padding: 1rem; border-radius: 6px; font-family: Arial, sans-serif;">
        <p class="alert-heading" style="display: flex; justify-content: space-between; align-items: center; font-weight: 600; font-size: 1.1rem; margin-bottom: 0.75rem;">
            <span><i class="fa fa-info-circle" aria-hidden="true" style="margin-right: 0.5rem; color: #0d6efd;"></i> Note</span>
            <!-- Optional toggle button can go here -->
        </p>
        <div id="noteContent" style="display: block; padding-left: 1rem;">
            <ul style="list-style-position: inside; margin: 0; padding-left: 0;">
                <li style="margin-bottom: 12px; font-size: 0.95rem; line-height: 1.4; color: #333;">
                    Each developer can handle up to 5 tasks concurrently. Since all developers are currently at full capacity, your task will be placed on hold.
                </li>
                <li style="margin-bottom: 0; font-size: 0.95rem; line-height: 1.4; color: #333;">
                    In this project, the focus was primarily on .NET technologies and frontend development. An AI prompt was used to specifically extract skills relevant to these areas.
                </li>
            </ul>
        </div>
    </div>

    <table class="table dev-users-table table-hover table-responsive">
        <thead>
            <tr>
                <th>User Name</th>
                <th>Role</th>
                <th>IsActive</th>
                <th>Ongoing Tasks</th>
                <th>Skills</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                foreach (var user in Model)
                {
                    <tr>
                        <td data-label="User Name">@user.UserName</td>
                        <td data-label="Role">@((PortalRoles)user.UserRole)</td>
                        <td data-label="IsActive">
                            @if (user.IsActive)
                            {
                                <span style="color:#22C55E; font-weight:600;">Active</span>
                            }
                            else
                            {
                                <span style="color:#f14836; font-weight:600;">Inactive</span>
                            }
                        </td>
                        <td data-label="Concurrent Task">
                            <button type="button"
                                    class="btn btn-outline-danger" id="ongoingTaskBtn_@user.ID"
                                    onclick="if (@(user.ConcurrentTask ?? 0) === 0) return false; openSidePanel('@Url.Action("GetDeveloperTask", "Home", new { area = "Manager", Dev = user.ID })')"
                                    title="@(user.ConcurrentTask == null || user.ConcurrentTask == 0 ? "No ongoing tasks" : "Click to view ongoing task")">
                                <img src="~/images/clipboard2-check-fill.svg" alt="clipboard icon" style="width:16px; height:16px; margin-right: 5px;" />
                                @(user.ConcurrentTask ?? 0)
                            </button>
                        </td>
                        <td data-label="Skills">@user.Skills</td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="5" class="text-center" style="padding: 34px 0; color: #aaa; font-weight: 500;">No users found.</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        if (!localStorage.getItem("seenTaskPopover")) {
            const firstTaskBtn = document.querySelector("[id^='ongoingTaskBtn_']");

            if (firstTaskBtn) {
                const intro = introJs();

                intro.setOptions({
                    steps: [
                        {
                            element: firstTaskBtn,
                            intro: "💡 Click here to view ongoing tasks detail",
                            position: "right"
                        }
                    ],
                    showBullets: false,
                    exitOnOverlayClick: true,
                    showProgress: false
                });

                firstTaskBtn.addEventListener("click", function () {
                    intro.exit(); // closes popover when button is clicked
                });

                intro.oncomplete(function () {
                    localStorage.setItem("seenTaskPopover", "true");
                });

                intro.onexit(function () {
                    localStorage.setItem("seenTaskPopover", "true");
                });

                // Start intro
                intro.start();

                setTimeout(function () {
                    intro.exit(); // this closes the popover
                }, 10000); // 10 sec
            }
        }
    });
</script>







